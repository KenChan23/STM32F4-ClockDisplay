<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\Blinky.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\Blinky.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Mon Dec 15 23:32:22 2014
<BR><P>
<H3>Maximum Stack Usage =        612 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char) &rArr; malloc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from main.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[5c]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ae]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6e]"></a>HT1632::HT1632(signed char, signed char, signed char, signed char)</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HT1632::HT1632(signed char, signed char, signed char, signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[b5]"></a>HT1632::HT1632__sub_object(signed char, signed char, signed char, signed char)</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>HT1632::writedata(unsigned short, unsigned char)</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writeRAM(unsigned char, unsigned char)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writeScreen()
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::sendcommand(unsigned char)
</UL>

<P><STRONG><a name="[61]"></a>HT1632::sendcommand(unsigned char)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HT1632::sendcommand(unsigned char) &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::setBrightness(unsigned char)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::blink(bool)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::begin(unsigned char)
</UL>

<P><STRONG><a name="[63]"></a>HT1632::begin(unsigned char)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HT1632::begin(unsigned char) &rArr; HT1632::sendcommand(unsigned char) &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::sendcommand(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::begin(unsigned char)
</UL>

<P><STRONG><a name="[7b]"></a>HT1632::clrPixel(unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT1632::clrPixel(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[7a]"></a>HT1632::setPixel(unsigned short)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HT1632::setPixel(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[66]"></a>HT1632::blink(bool)</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::sendcommand(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::blink(bool)
</UL>

<P><STRONG><a name="[67]"></a>HT1632::setBrightness(unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::sendcommand(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::setBrightness(unsigned char)
</UL>

<P><STRONG><a name="[68]"></a>HT1632::writeScreen()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HT1632::writeScreen() &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::fillScreen()
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::clearScreen()
</UL>

<P><STRONG><a name="[69]"></a>HT1632::clearScreen()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HT1632::clearScreen() &rArr; HT1632::writeScreen() &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::clearScreen()
</UL>

<P><STRONG><a name="[6a]"></a>HT1632::fillScreen()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillScreen()
</UL>

<P><STRONG><a name="[6b]"></a>HT1632::writeRAM(unsigned char, unsigned char)</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writedata(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[6c]"></a>HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 88 bytes, Stack size 552 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::HT1632(signed char, signed char, signed char, signed char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>HT1632LEDMatrix::HT1632LEDMatrix__sub_object(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 552 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 130 bytes, Stack size 552 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::HT1632(signed char, signed char, signed char, signed char)
</UL>

<P><STRONG><a name="[b7]"></a>HT1632LEDMatrix::HT1632LEDMatrix__sub_object(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 552 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 178 bytes, Stack size 560 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::HT1632(signed char, signed char, signed char, signed char)
</UL>

<P><STRONG><a name="[b8]"></a>HT1632LEDMatrix::HT1632LEDMatrix__sub_object(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 560 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 210 bytes, Stack size 560 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::HT1632(signed char, signed char, signed char, signed char)
</UL>

<P><STRONG><a name="[b9]"></a>HT1632LEDMatrix::HT1632LEDMatrix__sub_object(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 560 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>HT1632LEDMatrix::begin(unsigned char)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HT1632LEDMatrix::begin(unsigned char) &rArr; HT1632::begin(unsigned char) &rArr; HT1632::sendcommand(unsigned char) &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::begin(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>HT1632LEDMatrix::clearScreen()</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HT1632LEDMatrix::clearScreen() &rArr; HT1632::clearScreen() &rArr; HT1632::writeScreen() &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::clearScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>HT1632LEDMatrix::fillScreen()</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::fillScreen()
</UL>

<P><STRONG><a name="[76]"></a>HT1632LEDMatrix::blink(bool)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::blink(bool)
</UL>

<P><STRONG><a name="[77]"></a>HT1632LEDMatrix::setBrightness(unsigned char)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::setBrightness(unsigned char)
</UL>

<P><STRONG><a name="[78]"></a>HT1632LEDMatrix::writeScreen()</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HT1632LEDMatrix::writeScreen() &rArr; HT1632::writeScreen() &rArr; HT1632::writedata(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erasestopWatchMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eraseMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initStopwatchDisplay(HT1632LEDMatrix)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[91]"></a>HT1632LEDMatrix::width()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht1632.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>HT1632LEDMatrix::height()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht1632.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 170 bytes, Stack size 28 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::setPixel(unsigned short)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::clrPixel(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawCircle(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawLine(signed char, signed char, signed char, signed char, unsigned char)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::setPixel(unsigned char, unsigned char)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::clrPixel(unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[7c]"></a>HT1632LEDMatrix::clrPixel(unsigned char, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[7d]"></a>HT1632LEDMatrix::setPixel(unsigned char, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[7e]"></a>HT1632LEDMatrix::drawLine(signed char, signed char, signed char, signed char, unsigned char)</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillCircle(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[7f]"></a>HT1632LEDMatrix::drawRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 124 bytes, Stack size 36 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawLine(signed char, signed char, signed char, signed char, unsigned char)
</UL>

<P><STRONG><a name="[80]"></a>HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 64 bytes, Stack size 36 bytes, ht1632.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erasestopWatchMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eraseMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initStopwatchDisplay(HT1632LEDMatrix)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>HT1632LEDMatrix::drawCircle(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 278 bytes, Stack size 52 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[82]"></a>HT1632LEDMatrix::fillCircle(unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, ht1632.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::drawLine(signed char, signed char, signed char, signed char, unsigned char)
</UL>

<P><STRONG><a name="[ba]"></a>HT1632LEDMatrix::setCursor(unsigned char, unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>HT1632LEDMatrix::setTextSize(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>HT1632LEDMatrix::setTextColor(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht1632.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>InitSystick</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitSystick &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 594 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = main &rArr; HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeAlert(unsigned*, unsigned*)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateStopwatchTime(unsigned, unsigned*, unsigned*)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initStopwatchDisplay(HT1632LEDMatrix)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawMiddleTwoDots(HT1632LEDMatrix)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTime(unsigned, unsigned*, unsigned*, unsigned*)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLEDPins()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitButton()
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystick
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::height()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::width()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::clearScreen()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::begin(unsigned char)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[86]"></a>InitLEDPins()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = InitLEDPins() &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>InitButton()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = InitButton() &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>drawNine(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawNine(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[9b]"></a>drawEight(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawEight(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[9c]"></a>drawSeven(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawSeven(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[9d]"></a>drawSix(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawSix(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[9e]"></a>drawFive(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawFive(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[9f]"></a>drawFour(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawFour(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[a0]"></a>drawThree(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawThree(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[a1]"></a>drawTwo(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawTwo(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[a2]"></a>drawOne(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawOne(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[a3]"></a>drawZero(HT1632LEDMatrix, unsigned, unsigned)</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
</UL>

<P><STRONG><a name="[8a]"></a>drawSixthDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawSixthDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>drawFifthDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawFifthDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>drawFourthDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawFourthDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>drawThirdDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawThirdDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>drawSecondDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawSecondDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>drawFirstDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawFirstDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>drawMiddleTwoDots(HT1632LEDMatrix)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = drawMiddleTwoDots(HT1632LEDMatrix) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>eraseMiddleTwoDots(HT1632LEDMatrix)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, digitdisplay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>

<P><STRONG><a name="[89]"></a>calculateTime(unsigned, unsigned*, unsigned*, unsigned*)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = calculateTime(unsigned, unsigned*, unsigned*, unsigned*)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>initStopwatchDisplay(HT1632LEDMatrix)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = initStopwatchDisplay(HT1632LEDMatrix) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawStopwatchFirstDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawStopwatchSecondDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawStopwatchThirdDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*)</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drawStopwatchFourthDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawZero(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawOne(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTwo(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThree(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFour(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFive(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSix(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSeven(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawEight(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawNine(HT1632LEDMatrix, unsigned, unsigned)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>calculateStopwatchTime(unsigned, unsigned*, unsigned*)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, digitdisplay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>drawStopwatchMiddleTwoDots(HT1632LEDMatrix)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = drawStopwatchMiddleTwoDots(HT1632LEDMatrix) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>erasestopWatchMiddleTwoDots(HT1632LEDMatrix)</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, digitdisplay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>

<P><STRONG><a name="[a7]"></a>Delay(unsigned)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, digitdisplay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeAlert(unsigned*, unsigned*)
</UL>

<P><STRONG><a name="[95]"></a>timeAlert(unsigned*, unsigned*)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timeAlert(unsigned*, unsigned*)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*)</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, digitdisplay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = initialDisplay(HT1632LEDMatrix, unsigned*, unsigned*, unsigned*) &rArr; drawSecondDigit(HT1632LEDMatrix, unsigned*) &rArr; drawZero(HT1632LEDMatrix, unsigned, unsigned) &rArr; HT1632LEDMatrix::fillRect(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; HT1632LEDMatrix::drawPixel(unsigned char, unsigned char, unsigned char) &rArr; HT1632::setPixel(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSecondDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFourthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawThirdDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawSixthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFirstDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawFifthDigit(HT1632LEDMatrix, unsigned*)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::writeScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[84]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSystick
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>GPIO_DeInit</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[65]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLEDPins()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitButton()
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::begin(unsigned char)
</UL>

<P><STRONG><a name="[bd]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeAlert(unsigned*, unsigned*)
</UL>

<P><STRONG><a name="[a8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeAlert(unsigned*, unsigned*)
</UL>

<P><STRONG><a name="[c3]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c6]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>RCC_DeInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>RCC_HSEConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[ac]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[c9]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>RCC_PLLConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>RCC_MCO1Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_MCO2Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>RCC_HCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>RCC_PCLK1Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>RCC_PCLK2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>RCC_SAIPLLI2SClkDivConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>RCC_SAIPLLSAIClkDivConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>RCC_SAIBlockACLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>RCC_SAIBlockBCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>RCC_TIMCLKPresConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLEDPins()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitButton()
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632::begin(unsigned char)
</UL>

<P><STRONG><a name="[e6]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[ea]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>RCC_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>RCC_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[f7]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[f9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[fb]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[fc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6d]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1632LEDMatrix::HT1632LEDMatrix(unsigned char, unsigned char, unsigned char)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a9]"></a>SetSysClock</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
